Command line: "./vi_metrics_time" "-r" "20"

Release 'vi_metrics_time' May 22 2024 14:21:31.
Start: 2024.05.29 16:34:00
Model name:                           Cortex-A72
CPU max MHz:                          1800.0000
CPU min MHz:                          600.0000
Computer: 'RaspberryPi4'

Collecting function properties... Done (1.5ks)

Measured properties of time functions (median of 20 measurements):
Name:............................................ Discreteness:    +/- Duration:    +/- One tick:    +/-   Type:
vvvvvv                                                                                                          
<LNX>::times(tms):...............................        10.0ms   0.0%   860.0ns   0.3%    10.0ms   0.8% Process
<LNX>::times(nullptr):...........................        10.0ms   0.0%   400.0ns   0.0%    10.0ms   0.0%    Wall
<LNX>::gettimeofday():...........................         1.0us   0.3%    44.0ns   0.1%     1.0us   0.0%    Wall
<LNX>::getrusage(RUSAGE_THREAD):.................         4.0ms   0.0%   680.0ns   0.0%     1.0us   0.0%  Thread
<LNX>::getrusage(RUSAGE_SELF):...................         1.1us   0.9%     1.1us   0.3%     1.0us   0.0% Process
<LNX>::clock_gettime(CLOCK_THREAD_CPUTIME_ID):...       746.0ns   1.1%   750.0ns   0.4%     1.0ns   0.0%  Thread
<LNX>::clock_gettime(CLOCK_TAI):.................        48.3ns   0.1%    45.0ns   0.1%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_REALTIME_COARSE):.....         4.0ms   0.0%    19.0ns   0.2%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_REALTIME):............        48.3ns   0.8%    45.0ns   1.7%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_PROCESS_CPUTIME_ID):..       782.0ns   0.9%   790.0ns   0.4%     1.0ns   0.0% Process
<LNX>::clock_gettime(CLOCK_MONOTONIC_RAW):.......        53.1ns  11.0%    42.0ns   7.5%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_MONOTONIC_COARSE):....         4.0ms   0.0%    19.0ns   0.4%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_MONOTONIC):...........        48.3ns   0.1%    45.0ns   0.1%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_BOOTTIME):............        48.3ns   0.1%    45.0ns   0.2%     1.0ns   0.0%    Wall
<C>  ::timespec_get(TIME_UTC):...................        47.2ns   5.1%    44.0ns   7.8%     1.0ns   0.0%    Wall
<C>  ::time():...................................         1.0s    0.0%    23.0ns   0.8%     1.0s    0.0%    Wall
<C>  ::clock():..................................         1.0us   0.4%   780.0ns   0.5%     1.0us   0.0% Process
<C++>::system_clock::now():......................        46.7ns  10.0%    45.0ns   4.8%     1.0ns   0.0%    Wall
<C++>::steady_clock::now():......................        46.7ns  12.0%    50.0ns   0.2%     1.0ns   0.0%    Wall
<C++>::high_resolution_clock::now():.............        46.7ns   7.4%    45.0ns   5.2%     1.0ns   0.0%    Wall
<ASM>::MRS:......................................        18.9ns   0.5%     5.0ns   0.8%    19.0ns   0.0%    Wall


Notes:
	The std::chrono::system_clock::is_steady:          false;
	The std::chrono::steady_clock::is_steady:          true;
	The std::chrono::high_resolution_clock::is_steady: false;
	The std::chrono::system_clock::duration:            1.0ns;
	The std::chrono::steady_clock::duration:            1.0ns;
	The std::chrono::high_resolution_clock::duration:   1.0ns;
	The number of clock vi_tmGetTicks per second 'CLOCKS_PER_SEC': 1'000'000 (what is equivalent to 1.0us)
	The number of clock vi_tmGetTicks per second 'sysconf(_SC_CLK_TCK)': 100 (10ms);
	Resolution (precision) 'clock_getres(CLOCK_REALTIME)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_MONOTONIC)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_PROCESS_CPUTIME_ID)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_THREAD_CPUTIME_ID)': 1.0ns;

Time expend: 00:25:16
