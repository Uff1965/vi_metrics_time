Build: Apr 26 2024 19:06:20 Release
Start: 2024.04.26 21:23:48
Command line: "../bin/vi_metrics_time" "-r" "20"

Model name:          ARM1176
CPU max MHz:         700.0000
CPU min MHz:         700.0000


Collecting function properties... Done (1.5ks)

Measured properties of time functions (minimum value from 20 measurements):
Name:............................................ Discreteness:    +/- Duration:    +/- One tick:    +/-   Type:
vvvvvv                                                                                                          
<LNX>::times(tms):...............................         9.9ms   0.0%     8.6us   1.2%     9.9ms   0.7%  Thread
<LNX>::times(nullptr):...........................        10.0ms   0.0%   426.0ns  12.0%    10.0ms   0.0%    Wall
<LNX>::gettimeofday():...........................         1.0us  12.0%   901.0ns   3.6%     1.0us   0.0%    Wall
<LNX>::getrusage(RUSAGE_THREAD):.................         3.7ms  20.0%     3.2us   1.2%     1.0us   0.5%  Thread
<LNX>::getrusage(RUSAGE_SELF):...................         7.2us   4.9%     6.2us   0.7%     1.0us   0.5%  Thread
<LNX>::clock_gettime(CLOCK_THREAD_CPUTIME_ID):...         4.0us   5.2%     3.9us   7.2%     1.0ns  15.0%  Thread
<LNX>::clock_gettime(CLOCK_TAI):.................         1.2us  16.0%     1.2us   5.1%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_REALTIME_COARSE):.....        10.0ms   0.0%   822.0ns   0.5%   998.0ps   0.0%    Wall
<LNX>::clock_gettime(CLOCK_REALTIME):............         1.2us  10.0%     1.1us   0.4%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_PROCESS_CPUTIME_ID):..         6.4us  24.0%     6.0us   6.1%     1.0ns   1.9%  Thread
<LNX>::clock_gettime(CLOCK_MONOTONIC_RAW):.......         1.2us   9.0%     1.1us   2.9%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_MONOTONIC_COARSE):....        10.0ms   0.0%   898.0ns   1.1%   999.0ps   0.0%    Wall
<LNX>::clock_gettime(CLOCK_MONOTONIC):...........         1.2us  10.0%     1.1us   2.6%     1.0ns   0.0%    Wall
<LNX>::clock_gettime(CLOCK_BOOTTIME):............         1.2us  78.0%     1.2us  25.0%     1.0ns   0.0%    Wall
<C>  ::timespec_get(TIME_UTC):...................         1.2us  12.0%     1.1us   0.7%     1.0ns   0.0%    Wall
<C>  ::time():...................................         1.0s    0.0%   938.0ns   3.4%     1.0s    0.0%    Wall
<C>  ::clock():..................................         6.6us  28.0%     6.5us   1.8%     1.0us   0.5%  Thread
<C++>::system_clock::now():......................         1.4us  66.0%     1.3us   0.8%     1.0ns   0.0%    Wall
<C++>::steady_clock::now():......................         1.4us   8.3%     1.2us   5.2%     1.0ns   0.0%    Wall
<C++>::high_resolution_clock::now():.............         1.4us   8.7%     1.3us   1.3%     1.0ns   0.0%    Wall


Notes:
	The std::chrono::system_clock::is_steady:          false;
	The std::chrono::steady_clock::is_steady:          true;
	The std::chrono::high_resolution_clock::is_steady: false;
	The std::chrono::system_clock::duration:            1.0ns;
	The std::chrono::steady_clock::duration:            1.0ns;
	The std::chrono::high_resolution_clock::duration:   1.0ns;
	The number of clock vi_tmGetTicks per second 'CLOCKS_PER_SEC': 1'000'000 (what is equivalent to 1.0us)
	The number of clock vi_tmGetTicks per second 'sysconf(_SC_CLK_TCK)': 100 (10ms);
	Resolution (precision) 'clock_getres(CLOCK_REALTIME)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_MONOTONIC)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_PROCESS_CPUTIME_ID)': 1.0ns;
	Resolution (precision) 'clock_getres(CLOCK_THREAD_CPUTIME_ID)': 1.0ns;

Time expend: 00:25:06
